// <auto-generated />
using IntalioTaskDB.AppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IntalioTaskDB.Migrations
{
    [DbContext(typeof(intalioContext))]
    partial class intalioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("IntalioTaskCore.Entities.countries", b =>
                {
                    b.Property<int>("country_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("country_name")
                        .HasColumnType("text");

                    b.HasKey("country_code");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("IntalioTaskCore.Entities.countryCurrencyRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("EURRate")
                        .HasColumnType("text");

                    b.Property<string>("USDRate")
                        .HasColumnType("text");

                    b.Property<int>("country_code")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("country_code");

                    b.ToTable("countryCurrencyRates");
                });

            modelBuilder.Entity("IntalioTaskCore.Entities.countryCurrencyRate", b =>
                {
                    b.HasOne("IntalioTaskCore.Entities.countries", "Countries")
                        .WithMany("CountryRate")
                        .HasForeignKey("country_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("IntalioTaskCore.Entities.countries", b =>
                {
                    b.Navigation("CountryRate");
                });
#pragma warning restore 612, 618
        }
    }
}
